-- 1.	RETURNS TRACK NAME AND ITS COMPOSER FROM TRACKS TABLE

	SELECT Name, Composer FROM tracks; 

-- 2.	RETURNS ALL COLUMNS FROM TRACKS TABLE

	SELECT * FROM tracks; 

-- 3.	RETURNS THE NAME OF COMPOSERS OF EACH TRACK     ("EACH" should remind "DISTINCT")

	SELECT DISTINCT Composer FROM tracks; 

-- 4.	RETURNS UNIQUE ALBUMID, MEDIATYPEID FROM TRACKS TABLE     ("UNIQUE" should remind "DISTINCT")

	SELECT DISTINCT AlbumId, MediaTypeId FROM tracks; 

-- 5.	RETURNS TRACK NAME AND TRACKID OF ‘Jorge Ben’

	SELECT Name, TrackId FROM tracks WHERE Composer = 'Jorge Ben'; 

-- 6.	RETURNS ALL INFO OF THE INVOICES OF WHICH TOTAL AMOUNT IS GREATER THAN $25

	SELECT * FROM invoices WHERE Total > 25; 

-- 7.	RETURNS ALL INFO OF THE INVOICES OF WHICH TOTAL AMOUNT IS GREATER THAN $15  ("LIMIT" EN SONDA OLACAK)

	SELECT * FROM invoices WHERE Total < 15 LIMIT 5;
	SELECT * FROM invoices WHERE Total < 3.96 LIMIT 5;
	SELECT * FROM invoices WHERE Total < 3.96 ORDER BY total DESC LIMIT 5;   

-- 8.	RETURNS ALL INFO OF THE INVOICES OF WHICH TOTAL AMOUNT IS GREATER THAN $10. THEN SORT THE TOTAL AMOUNTS IN DESCENDING ORDER, LASTLY DISPLAY TOP 2 ROWS

	SELECT * FROM invoices WHERE Total > 10 ORDER BY Total DESC LIMIT 2; 

-- 9.	RETURNS ALL INFO OF THE INVOICES OF WHICH BILLING COUNTRY IS NOT CANADA. THEN SORT THE TOTAL AMOUNTS IN ASCENDING ORDER, LASTLY DISPLAY TOP 10 ROWS

	SELECT * FROM invoices WHERE NOT BillingCountry = 'Canada' ORDER BY Total ASC LIMIT 10;

-- 10.	RETURNS INVOICEID, CUSTOMERID AND TOTAL DOLLAR AMOUNT FOR EACH INVOICE. THEN SORT THEM FIRST BY CUSTOMERID IN ASCENDING, THEN TOTAL DOLLAR AMOUNT IN DESCENDING ORDER.

	SELECT InvoiceId, CustomerId, Total FROM invoices ORDER BY CustomerId, Total DESC; 

-- 11.	RETURNS ALL TRACK NAMES THAT START WITH ‘B’ AND END WITH ‘S’

	SELECT Name FROM tracks WHERE Name LIKE 'B%' AND Name LIKE '%s';
	SELECT Name FROM tracks WHERE Name LIKE 'B%s'; 

-- 12.	RETURNS THE NEWEST DATE AMONG THE INVOICE DATES BETWEEN 2008 AND 2011

	SELECT InvoiceDate FROM invoices WHERE InvoiceDate BETWEEN '2008-01-01' AND '2012-01-01' ORDER BY InvoiceDate DESC LIMIT 1; 

-- 13.	RETURNS THE FIRST AND LAST NAME OF THE CUSTOMERS WHO HAVE ORDERS FROM NORWAY AND BELGIUM

	SELECT FirstName, LastName FROM customers WHERE Country IN ('Belgium', 'Norway') 

-- 14.	RETURNS THE TRACK NAMES OF ‘ZAPPA’

	SELECT Composer, Name FROM tracks WHERE Composer LIKE '%Zappa';

-- 15.	HOW MANY TRACKS AND INVOICES ARE THERE IN THE DIGITAL MUSIC STORE, DISPLAY SEPERATELY

	SELECT COUNT(*) FROM tracks; 

	SELECT COUNT(*) FROM invoices; 

-- 16	HOW MANY COMPOSERS ARE THERE IN THE DIGITAL MUSIC STORE

	SELECT COUNT(DISTINCT Composer) FROM tracks; 

-- 17.	HOW MANY TRACKS DOES EACH ALBUM HAVE, DISPLAY ALBUMID AND NUMBER OF TRACKS SORTED FROM HIGHEST TO LOWEST

	SELECT AlbumId, COUNT(*) AS number_of_tracks FROM tracks GROUP BY AlbumId ORDER BY number_of_tracks DESC; 
	SELECT AlbumId, COUNT(*) AS number_of_tracks FROM tracks GROUP BY AlbumId ; 
	
-- 18.	RETURNS TRACK NAME HAVING THE MINIMUM AND MAXIMUM DURATION, DISPLAY SEPERATELY

	SELECT Name, MIN(Milliseconds) FROM tracks; 
	
	SELECT Name, MAX(Milliseconds) FROM tracks; 

-- 19.	RETURNS THE TRACKS HAVING DURATION LESS THAN THE AVERAGE DURATION

	SELECT AVG(Milliseconds) FROM tracks;
	SELECT * FROM tracks WHERE Milliseconds < 393599.212103911; 
	SELECT * FROM tracks WHERE Milliseconds < (SELECT AVG(Milliseconds) FROM tracks);

-- 20.	RETURNS THE TOTAL NUMBER OF EACH COMPOSER’s TRACK.
	
	SELECT Composer, COUNT(*) FROM tracks GROUP BY Composer; 
	SELECT Composer, COUNT(Composer) FROM tracks GROUP BY Composer; 
	SELECT Composer, COUNT(Composer) FROM tracks WHERE Composer IS NOT NULL GROUP BY Composer; 
	SELECT Composer, COUNT(Composer) FROM tracks WHERE Composer IS NOT NULL;
	SELECT COUNT(Composer) FROM tracks WHERE Composer IS NOT NULL;

-- 26.	İLAVE: ASSIGNMENT-2.SORU
-- Find the album title of the tracks. Your solution should include track name and its album title.
	
	SELECT Name, Title FROM tracks, albums WHERE tracks.AlbumId=albums.AlbumId; 

	SELECT tracks.Name, albums.Title FROM tracks 
	JOIN albums ON tracks.AlbumId=albums.AlbumId;

-- 21.	RETURNS THE GENRE OF EACH TRACK.
	
	SELECT tracks.Name, genres.Name FROM tracks 
	JOIN genres ON tracks.GenreId = genres.GenreId; 
	
	SELECT t.Name, g.Name FROM tracks t 
	JOIN genres g ON t.GenreId = g.GenreId;

22.	RETURNS THE ARTIST’s ALBUM INFO

	SELECT * FROM artists 
	LEFT JOIN albums ON albums.ArtistId = artists.ArtistId; 
	
-- 	SELECT * FROM albums 
-- 	LEFT JOIN artists ON albums.ArtistId = artists.ArtistId; 

-- 23.	RETURNS THE MINIMUM DURATION OF THE TRACK IN EACH ALBUM. DISPLAY ALBUMID, ALBUM TITLE AND DURATION OF THE TRACK. THEN SORT THEM FROM HIGHEST TO LOWEST

	SELECT tracks.AlbumId, albums.Title, MIN(tracks.Milliseconds) AS min_duration FROM tracks 
	JOIN albums ON tracks.AlbumId = albums.AlbumId 
	GROUP BY tracks.AlbumId, albums.Title 
	ORDER BY min_duration DESC;

-- 27.	ilave: assignmet 4. soru: Find the total duration of each album. 
-- 	Your solution should include album id, album title and its total duration sorted from highest to lowest.
	
	SELECT tracks.AlbumId, albums.Title, SUM(tracks.Milliseconds) AS total_duration FROM tracks 
	JOIN albums ON tracks.AlbumId = albums.AlbumId 
	GROUP BY tracks.AlbumId, albums.Title 
	ORDER BY total_duration DESC;	

-- 24.	RETURNS ALBUMS WHOSE TOTAL DURATION IS HIGHER THAN 60 MIN. DISPLAY ALBUM TITLE AND THEIR DURATIONS. THEN SORT THE RESULT FROM HIGHEST TO LOWEST

	SELECT albums.Title, SUM(tracks.Milliseconds) AS total_duration FROM tracks 
	JOIN albums ON tracks.AlbumId = albums.AlbumId 
	GROUP BY tracks.AlbumId HAVING total_duration > 3600000 
	ORDER BY total_duration DESC;

25.	RETURNS TRACKID, TRACK NAME AND ALBUMID INFO OF THE ALBUM WHOSE TITLE ARE ‘Prenda Minha’, 'Heart of the Night' AND 'Out Of Exile'.

	SELECT Trackid, Name, Albumid FROM tracks 
	WHERE albumid IN (SELECT AlbumId FROM albums 
				WHERE Title IN ('Prenda Minha', 'Heart of the Night', 'Out Of Exile')); 
	
	SELECT Trackid, Name, Albumid FROM tracks 
	WHERE albumid IN (SELECT AlbumId FROM albums 
				WHERE Title='Prenda Minha' OR Title='Heart of the Night' OR Title='Out Of Exile'); 